[tool.poetry]
name = "tomodachi-testcontainers"
version = "0.1.0"
description = "Collection of Testcontainers, pytest fixtures and test clients for end-to-end/integration testing for Python Tomodachi framework. A great starting point to learn more about Testcontainers and necessity of integration testing."
authors = ["Filips Nastins <nastinsfilips@gmail.com>"]
license = "MIT"
readme = "README.md"

homepage = "https://github.com/filipsnastins/tomodachi-testcontainers"
repository = "https://github.com/filipsnastins/tomodachi-testcontainers"

[tool.poetry.dependencies]
python = "^3.8.1"
aiobotocore = "^2.5.2"
asyncssh = { version = "^2.13.2", optional = true }
pytest = "^7.1.2"
testcontainers = "^3.7.1"
types-aiobotocore = { extras = ["dynamodb", "s3", "sns", "sqs", "ssm"], version = "^2.5.2" }

[tool.poetry.group.dev.dependencies]
autoflake = "^2.2.0"
bandit = "^1.7.5"
black = "^23.7.0"
busypie = "^0.5.1"
colorama = "^0.4.6"
flake8 = "^6.0.0"
flake8-annotations = "^3.0.1"
flake8-black = "^0.3.6"
flake8-bugbear = "^23.5.9"
flake8-executable = "^2.1.3"
flake8-isort = "^6.0.0"
flake8-junit-report = "^2.1.0"
flake8-literal = "^1.3.0"
flake8-no-pep420 = "^2.4.0"
flake8-picky-parentheses = "^0.5.0"
flake8-pyproject = "^1.2.3"
flake8-pytest-style = "^1.7.2"
flake8-return = "^1.2.0"
flake8-simplify = "^0.20.0"
flake8-use-pathlib = "^0.3.0"
flake8-warnings = "^0.4.0"
httpx = "^0.24.1"
isort = "^5.12.0"
mypy = "^1.4.1"
pre-commit = ">=3.3.3"
pydantic = "^2.0.2"
pylint = "^2.17.4"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
pytest-env = "^0.8.2"
ruff = "^0.0.277"
structlog = "^23.1.0"
tomodachi = "^0.25.0"

[tool.poetry.extras]
sftp = ["asyncssh"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.plugins."pytest11"]
tomodachi_testcontainers = "tomodachi_testcontainers.pytest"

[tool.poetry.scripts]
hooks = "dev:hooks"
format = "dev:format"
lint = "dev:lint"
test = "dev:test"
test-cov-term = "dev:test_cov_term"
test-cov-html = "dev:test_cov_html"
test-ci = "dev:test_ci"

[tool.black]
line-length = 120
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '\.git/|\.mypy_cache/|\.venv/|\.pytest_cache/|\.vscode/|__pycache__/|build/|dist/'

[tool.isort]
profile = "black"
line_length = 120
skip = [".git", ".ruff_cache", ".mypy_cache", ".venv", ".pytest_cache", ".vscode", "__pycache__", "build", "dist"]

[tool.bandit]
exclude_dirs = ["tests", ".git", ".ruff_cache", ".mypy_cache", ".venv", ".pytest_cache", ".vscode", "__pycache__", "build", "dist"]

[tool.mypy]
python_version = "3.8"
ignore_missing_imports = true

[tool.flake8]
ignore = [
    "ANN101",
    "ANN401",
    "BLK100",
    "E501",
    "LIT101",
    "PL123",
]
literal-inline-quotes = "double"
literal-multiline-quotes = "double"
exclude = [".git", ".ruff_cache", ".mypy_cache", ".venv", ".pytest_cache", ".vscode", "__pycache__", "build", "dist"]

[tool.ruff]
target-version = "py38"
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
line-length = 120

[tool.pytest.ini_options]
minversion = "7.0"
junit_family = "xunit2"
testpaths = [
    "tests"
]
norecursedirs = [
    ".venv",
    "__pycache__",
    ".git"
]
log_cli_level = "INFO"
env = [
    "TOMODACHI_TESTCONTAINER_DOCKERFILE_PATH=examples/Dockerfile"
]
