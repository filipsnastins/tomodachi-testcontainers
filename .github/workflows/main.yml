name: main

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      POETRY_VIRTUALENVS_CREATE: false
      TESTCONTAINER_DOCKER_NETWORK: tomodachi-testcontainers
      DOCKER_BUILDKIT: 1
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Poetry cache for Python dependencies
        uses: actions/cache@v3
        if: startsWith(runner.os, 'Linux')
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ runner.os }}-poetry-

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | POETRY_HOME="$HOME/.poetry" python - --yes
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH

      - name: Test Poetry installation
        run: poetry --version

      - name: Install dependencies - production
        run: |
          poetry install --no-interaction
          poetry show --tree

      - name: Test package imports
        run: |
          poetry run python -c "import tomodachi_testcontainers"
          poetry run python -c "import tomodachi_testcontainers.clients"
          poetry run python -c "import tomodachi_testcontainers.pytest"
          poetry run python -c "import tomodachi_testcontainers.utils"

      - name: Install dependencies - dev and extas
        run: |
          poetry install --no-interaction --with dev --all-extras
          poetry show --tree

      - name: Test Poetry build step
        run: poetry build

      - name: Run commit hooks
        run: SKIP=test poetry run hooks

      - name: Create Docker network for running Testcontianers
        run: docker network create ${{ env.TESTCONTAINER_DOCKER_NETWORK }}

      - name: Run tests
        run: poetry run test-ci

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
