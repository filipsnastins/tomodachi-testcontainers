@startuml
!include <C4/C4_Component>
!include ../level_2_container/container/containers.puml

skinparam dpi 110

title Container Diagram - Application with Relational Database

relationalDbContainer()

Boundary(appContainerBoundary, "Application", "Container") {
    Boundary(serviceLayer, "Service", "Layer") {
        Component(useCases, "Use cases", "Python", "Application use cases (services).")
    }

    Boundary(domainLayer, "Domain", "Layer") {
        Component(domain, "Domain", "Python", "Application domain objects.")

        Component(ports, "Ports", "Python, typing.Protocol", "Ports protocol.")
    }

    Boundary(infrastructureLayer, "Adapters", "Layer") {
        Component(Repository, "In-memory repository", "Python", "Fake in-memory repository for testing and demo purposes.")

        Component_Ext(postgresRepository, "PostgreSQL repository", "Python, SQLAlchemy", "Adapter for PostgreSQL database.")
    }
}

Component(testcontainers, "Testcontainers", "Python, pytest", "Testcontainers library.")

Lay_R(domain, ports)

Lay_R(Repository, postgresRepository)

Rel_D(useCases, ports, "Uses")
Rel_D(useCases, domain, "Uses")

Rel_U(Repository, ports, "Implements")
Rel_U(postgresRepository, ports, "Implements")

Rel_D(postgresRepository, relationalDb, "Reads from and writes to", "SQLAlchemy")

Rel_U(testcontainers, relationalDb, "Creates PostgreSQL Testcontainer")

@enduml
